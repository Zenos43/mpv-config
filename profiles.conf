
# For low-end systems use this then, CPU and GPU are greatly reduced
#tscale=nearest
#interpolation=no
#scale=bilinear
#cscale=bilinear
#dscale=bilinear
#sws-scaler=fast-bilinear
#dither=no
#correct-downscaling=no
#linear-downscaling=no
#sigmoid-upscaling=no
#hdr-compute-peak=no

########  Anti-Ringing  ########
#Luma upscale deringing (Higher = Less rining)
scale-antiring=0.7
#Luma downscale deringing (Higher = Less rining)
dscale-antiring=0.7								# luma downscale deringing; currently does nothing with vo=gpu-next
#Chroma upscale deringing (Higher = Less rining)
cscale-antiring=0.7								# chroma upscale deringing; currently does nothing with vo=gpu-next

######## SCALERS AND SHADERS  ########
# Default was:
# dscale=hermite (because of mpv 0.37.0)
# scale=ewa_lanczos
# cscale=ewa_lanczossharp (because of profile=high-quality)
# Go here for more guides https://iamscum.wordpress.com/guides/videoplayback-guide/mpv-conf/

# Shaders which override "scale"/"dscale"/"cscale" to a certain point (depending on the shader)
#### Note below only for ravu scaler
# (without addition)= only luma
# yuv = luma and chroma
# rgb = same as “yuv” but different colour encoding system
# Use the one in “gather” for luma.
# Use the ones in “compute” for -YUV/-RGB.
# If they don’t work, fallback to the ones in the main folder.
# ravu-r4: Solid and reliable.
# ravu-lite-4: Faster and sharper than ravu-r4, but tends to oversharp aliasing a bit and might create few halos/ringing.
# ravu-zoom-r4: Slighly better results than ravu-r4, but much slower.
#### End

########  Luma upscaler  ########
# use nns128 instead of nns256 if you notice dropped frames
#glsl-shader=~~/shaders/nnedi3-nns256-win8x4.hook  # Luma upscaler 
#glsl-shader=~~/shaders/nnedi3-nns128-win8x4.hook  # Luma upscaler
#glsl-shader=~~/shaders/AMD_FSR_EASU_rgb_RT.glsl
#glsl-shader=~~/shaders/ArtCNN_C4F16.glsl   		# for powerfull pc
#glsl-shader=~~/shaders/ravu-zoom-ar-r3-rgb.hook  	# good balance between performance and quality

########  STATIC GRAIN	  ########
# If you use scaling shaders like “nnedi3”, “ravu”etc., make sure you run grain shaders after them.
#glsl-shader=~~/shaders/noise_static_luma_strong.hook
#glsl-shader="~~/shaders/noise_static_luma.hook"
#glsl-shaders-append="~~/shaders/noise_static_chroma.hook"

[Default]
glsl-shaders-clr
scale=ewa_lanczossharp
scale-blur=0.981251
cscale=catmull_rom
dscale=catmull_rom
correct-downscaling=yes
linear-downscaling=no
sigmoid-upscaling=yes
hdr-compute-peak=yes
hdr-peak-percentile=99.999					
hdr-contrast-recovery=0.30
allow-delayed-peak-detect=yes
glsl-shaders-append="~~/shaders/ravu-zoom-ar-r3-rgb.hook"
glsl-shaders-append="~~/shaders/CfL_Prediction.glsl"


# ====================   CUSTOM PROFILE   ====================

# load-auto-profiles=no 			#Below its all auto apply profile when videos match profile-cond. If u dont want to auto apply-profile then enable this

[4KHDR] # 2160p @ 60fps and 24-30fps (3840x2160 - 3840x1920 UHD - HDR window playback)
#profile-cond=((width ==3840) and get("video-params/primaries") == "bt.2020")        #profile triggers when video's width is 3840 pixels i.e 4K HDR videos
target-contrast=auto								    #use "auto" if not using OLED monitor if not then "inf"
deband=no
#target-prim=dci-p3                                                                  #disable this if your monitor doesn't support wide colour gamut
#glsl-shaders-append="~~/shaders/ravu-zoom-ar-r3-yuv.hook"                         #use this if your monitor is 1080p or 4K	
glsl-shaders-append="~~/shaders/SSimDownscaler.glsl"
#glsl-shaders-append="~~/shaders/CfL_Prediction.glsl"		

[4KSDR] # 2160p @ 60fps and 24-30fps (3840x2160 - 3840x1920 UHD - SDR) 
profile-desc=4k resolution with SDR
#profile-cond=((width ==3840) and get("video-params/primaries") == "bt.709")         #profile triggers when video's width is 3840 pixels i.e 4K SDR videos
target-prim=dci-p3                                                                  #disable this if your monitor doesn't support wide colour gamut
deband=no
glsl-shaders-append="~~/shaders/ravu-zoom-ar-r3-yuv.hook"                   #use this if your monitor is 1080p or 4K	
glsl-shaders-append="~~/shaders/SSimDownscaler.glsl"
glsl-shaders-append="~~/shaders/CfL_Prediction.glsl"		

[2k] # 1440p @ 60fps and 24-30fps (2560x1440) 
profile-desc=2k resolution
profile-cond=((width ==2560 and height ==1440))
profile-restore=copy
target-prim=dci-p3                                                                  #disable this if your monitor doesn't support wide colour gamut
# no deinterlacer required because presume progressive
glsl-shaders-append="~~/shaders/SSimDownscaler.glsl"
glsl-shaders-append="~~/shaders/PixelClipper.glsl"

[full-hd] # 1080p @ 60fps and 24-30fps
profile-desc=full-hd
profile-cond=((width ==1920 and height ==1080))
profile-restore=copy
#target-prim=dci-p3                                                                  #disable this if your monitor doesn't support wide colour gamut
# no deinterlacer required because presume progressive
# apply motion interpolation to match display frequency
glsl-shaders-append="~~/shaders/ravu-zoom-ar-r3-yuv.hook"                    #use this if your monitor is 1080p or 4K	
glsl-shaders-append="~~/shaders/PixelClipper.glsl"
glsl-shaders-append="~~/shaders/CfL_Prediction.glsl"						# Chroma upscaling is needed

[hd] # 720p @ (HD)
profile-desc=hd
profile-cond=(width ==1280 and height ==720)
profile-restore=copy
target-prim=dci-p3                                                                  #disable this if your monitor doesn't support wide colour gamut
glsl-shaders-append="~~/shaders/ravu-zoom-ar-r3-yuv.hook"                    #use this if your monitor is 1080p or 4K	
#glsl-shaders-append="~~/shaders/ravu-lite-ar-r4.hook"                   #use this if your monitor is 1440p 
glsl-shaders-append="~~/shaders/PixelClipper.glsl"
glsl-shaders-append="~~/shaders/CfL_Prediction.glsl"						# Chroma upscaling is needed

[sdtv-ntsc] # 640x480, 704x480, 720x480 @ 30fps)
profile-desc=sdtv-ntsc
profile-cond=((width ==640 and height ==480) or (width ==704 and height ==480) or (width ==720 and height ==480))
profile-restore=copy
target-prim=dci-p3                                                                  #disable this if your monitor doesn't support wide colour gamut
deinterlace=yes # MPV now uses BWDIF by default
# apply motion interpolation to match display frequency	
glsl-shaders-append="~~/shaders/ravu-zoom-ar-r3-yuv.hook"                    #use this if your monitor is 1080p or 4K	
glsl-shaders-append="~~/shaders/ravu-zoom-ar-r3-yuv.hook" # less resource intensive luma upscaling (doubler)
#glsl-shaders-append="~~/shaders/ravu-lite-ar-r4.hook"                   #use this if your monitor is 1440p 
glsl-shaders-append="~~/shaders/PixelClipper.glsl"
glsl-shaders-append="~~/shaders/CfL_Prediction.glsl"						# Chroma upscaling is needed

[Weird-Res] # 638x360, 554x416 (Weird resolution that i watched on internet)
profile-desc=You'r Weird
profile-cond=((width ==638 and height ==360) or (width ==554 and height ==416))
profile-restore=copy
target-prim=dci-p3                                                                  #disable this if your monitor doesn't support wide colour gamut
deinterlace=yes # MPV now uses BWDIF by default
# apply motion interpolation to match display frequency
glsl-shaders-append="~~/shaders/ravu-zoom-ar-r3-yuv.hook"                    #use this if your monitor is 1080p or 4K	
glsl-shaders-append="~~/shaders/ravu-zoom-ar-r3-yuv.hook" # less resource intensive luma upscaling (doubler)
glsl-shaders-append="~~/shaders/ravu-zoom-ar-r3-yuv.hook" # less resource intensive luma upscaling (doubler)
#glsl-shaders-append="~~/shaders/ravu-lite-ar-r4.hook"                   #use this if your monitor is 1440p 
glsl-shaders-append="~~/shaders/PixelClipper.glsl"
glsl-shaders-append="~~/shaders/CfL_Prediction.glsl"						# Chroma upscaling is needed

[sdtv-pal] # 352x576, 480x576, 544x576, 720x576 @ 30fps (PAL broadcast or DVD - interlaced)
profile-desc=sdtv-pal
profile-cond=((width ==352 and height ==576) or (width ==480 and height ==576) or (width ==544 and height ==576) or (width ==720 and height ==576))
profile-restore=copy
target-prim=dci-p3                                                                  #disable this if your monitor doesn't support wide colour gamut
deinterlace=yes # MPV now uses BWDIF by default
# apply motion interpolation to match display frequency
# apply debanding
glsl-shaders-append="~~/shaders/ravu-zoom-ar-r3-yuv.hook"                    #use this if your monitor is 1080p or 4K	
glsl-shaders-append="~~/shaders/ravu-zoom-ar-r3-yuv.hook" # less resource intensive luma upscaling (doubler)
glsl-shaders-append="~~/shaders/ravu-zoom-ar-r3-yuv.hook" # less resource intensive luma upscaling (doubler)
#glsl-shaders-append="~~/shaders/ravu-lite-ar-r4.hook"                   #use this if your monitor is 1440p 
glsl-shaders-append="~~/shaders/PixelClipper.glsl"
glsl-shaders-append="~~/shaders/CfL_Prediction.glsl"						# Chroma upscaling is needed

[HDR]
profile-desc=HDR configuration
profile-cond=p["video-out-params/max-luma"] > 203
profile-restore=copy
blend-subtitles=no
deband=no
#vf=""

[SDR-Gamut]
profile-desc=Gamut mapping for SDR content
profile-cond=p["video-params/primaries"] ~= "bt.709" and p["video-params/gamma"] == "bt.1886"
profile-restore=copy
gamut-mapping-mode=clip

[hdr-2390]
profile-cond=p.tone_mapping == "bt.2390" and p.current_vo == "gpu-next"
profile-restore=copy
tone-mapping-param=2.0

[quality-twitter]
profile-cond=string.find(path, 'twitter.') ~= nil or string.find(path, 'x.com') ~= nil
profile-restore=copy-equal
ytdl-format=bestvideo[height>=720][protocol*=m3u8]+bestaudio/best[height>=720][protocol*=m3u8]

[stream-no-ytdl]
profile-cond=string.find(path, '%.m3u') ~= nil or string.find(path, '%.mpd') ~= nil or string.find(path, '%.mp4') ~= nil or string.find(path, 'googlevideo%.') ~= nil or string.find(path, '%.jpg') ~= nil or string.find(path, '%.png') ~= nil or string.find(path, '%.epg') ~= nil or string.find(path, '%.ts') ~= nil or string.find(path, '%.xml') ~= nil or string.find(path, 'epg') ~= nil or string.find(path, 'EXTM3U') ~= nil
profile-restore=copy-equal
ytdl=no

[Dolby Vision]
target-trc=pq
target-prim=bt.2020

[Fast] # For low internet speed and low-latency
glsl-shaders-clr
profile-desc=Fast & low-latency
profile-restore=copy
scale=bilinear
cscale=bilinear
dscale=bicubic_fast
correct-downscaling=no
linear-downscaling=no
sigmoid-upscaling=no
hdr-compute-peak=no
hdr-peak-percentile=100
hdr-contrast-recovery=0.0
speed=1.01
deband = no
allow-delayed-peak-detect=yes
dither=no
gpu-dumb-mode = yes
video-sync = audio
hwdec-extra-frames = 64
vd-lavc-threads = 64
interpolation=no        										# requires reference frames (more buffering)
video-latency-hacks=yes 										# typically 1 or 2 video frame less latency ( not recommended to enable this on normal profile - this option is known to break other options such as motion interpolation, etc )
#stream-buffer-size=4k   										# minimal buffer size; normally not needed
demuxer-lavf-o-add=fflags=+nobuffer 			# can help for weird reasons
demuxer-lavf-probe-info=nostreams   			# avoid probing unless absolutely needed
demuxer-lavf-analyzeduration=0.1    			# if it probes, reduce it
demuxer-lavf-o=live_start_index=-1								# Improve latency for livestreams ( dont use this on normal internet speed only slow internet its can cause stutter stream )
cache-on-disk=yes												# Store cache payload on the hard disk instead of in RAM. (This may negatively impact performance unless used for slow input such as network.)
cache-pause-initial = yes

#[Benchmark]
#profile-desc=Benchmark Test
#audio=no
#untimed=yes
#video-sync=display-desync
#vulkan-swap-mode=mailbox
#opengl-swapinterval=0
#osd-msg1="FPS: ${estimated-display-fps}"

# ==========    ANIME PROFILE    ==========

[Anime4K-ModeA]
glsl-shaders-clr
profile=Default
profile-desc=Optimized for Most 1080p - 720p - SD anime
profile-restore=copy
glsl-shader="~~/shaders/Anime4K_Clamp_Highlights.glsl"
glsl-shader="~~/shaders/Anime4K_Restore_CNN_VL.glsl"
glsl-shader="~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl"
glsl-shader="~~/shaders/Anime4K_AutoDownscalePre_x2.glsl"
glsl-shader="~~/shaders/Anime4K_AutoDownscalePre_x4.glsl"
glsl-shader="~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl"

[Anime4K-ModeA+A] # The best one ( maybe :P )
glsl-shaders-clr
profile=Default
profile-desc=Same as A better and smoother ( Reconstructs almost all degraded lines ) so far this one is the best
profile-restore=copy
glsl-shader="~~/shaders/Anime4K_Clamp_Highlights.glsl"
glsl-shader="~~/shaders/Anime4K_Restore_CNN_VL.glsl"
glsl-shader="~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl"
glsl-shader="~~/shaders/Anime4K_Restore_CNN_M.glsl"
glsl-shader="~~/shaders/Anime4K_AutoDownscalePre_x2.glsl"
glsl-shader="~~/shaders/Anime4K_AutoDownscalePre_x4.glsl"
glsl-shader="~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl"

[Anime4K-ModeB+B]
glsl-shaders-clr
profile=Default
profile-desc=Same as B better perceptual quality
profile-restore=copy
glsl-shader="~~/shaders/Anime4K_Clamp_Highlights.glsl"
glsl-shader="~~/shaders/Anime4K_Restore_CNN_Soft_VL.glsl"
glsl-shader="~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl"
glsl-shader="~~/shaders/Anime4K_AutoDownscalePre_x2.glsl"
glsl-shader="~~/shaders/Anime4K_AutoDownscalePre_x4.glsl"
glsl-shader="~~/shaders/Anime4K_Restore_CNN_Soft_M.glsl"
glsl-shader="~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl"

[Anime4K-ModeB]
glsl-shaders-clr
profile=Default
profile-desc=Optimized for Most 1080p - 720p anime (1080p->720p downscaled anime to reduces compression - artifacts - degraded - lines - blur - noise - ringing - aliasing)
profile-restore=copy
glsl-shader="~~/shaders/Anime4K_Clamp_Highlights.glsl"
glsl-shader="~~/shaders/Anime4K_Restore_CNN_Soft_VL.glsl"
glsl-shader="~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl"
glsl-shader="~~/shaders/Anime4K_AutoDownscalePre_x2.glsl"
glsl-shader="~~/shaders/Anime4K_AutoDownscalePre_x4.glsl"
glsl-shader="~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl"

[Anime4K-ModeC]
glsl-shaders-clr
profile=Default
profile-desc=1080p->480p downscaled anime - Very rarely, 1080p animated movies - Images with no degradation - Wallpapers - Pixiv art ( Highest PSNR, Reduces noise )
profile-restore=copy
glsl-shader="~~/shaders/Anime4K_Clamp_Highlights.glsl"
glsl-shader="~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_VL.glsl"
glsl-shader="~~/shaders/Anime4K_AutoDownscalePre_x2.glsl"
glsl-shader="~~/shaders/Anime4K_AutoDownscalePre_x4.glsl"
glsl-shader="~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl"

[Anime4K-ModeC+A]
glsl-shaders-clr
profile=Default
profile-desc=Same as C ( Slightly higher perceptual quality )
profile-restore=copy
glsl-shader="~~/shaders/Anime4K_Clamp_Highlights.glsl"
glsl-shader="~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_VL.glsl"
glsl-shader="~~/shaders/Anime4K_AutoDownscalePre_x2.glsl"
glsl-shader="~~/shaders/Anime4K_AutoDownscalePre_x4.glsl"
glsl-shader="~~/shaders/Anime4K_Restore_CNN_M.glsl"
glsl-shader="~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl"

# ==========    CUSTOM-AUDIO    ==========

[Downmix_Audio_5_1]
profile-restore=copy-equal
af=lavfi="lowpass=c=LFE:f=120,volume=1.6,pan=stereo|FL=0.5*FC+0.707*FL+0.707*BL+0.5*LFE|FR=0.5*FC+0.707*FR+0.707*BR+0.5*LFE"

[Downmix_Audio_7_1]
profile-restore=copy-equal
af=lavfi="lowpass=c=LFE:f=120,volume=1.6,pan=stereo|FL=0.5*FC+0.3*FLC+0.3*FL+0.3*BL+0.3*SL+0.5*LFE|FR=0.5*FC+0.3*FRC+0.3*FR+0.3*BR+0.3*SR+0.5*LFE"

[Normalize]
profile-cond=p["audio-params/channel-count"] > 2
profile-restore=copy-equal
af-pre=@dynaudnorm:lavfi=[dynaudnorm=g=5:f=250:r=0.9:p=0.5]

[audio_DolbyAtmos]
profile-desc = Dolby Atmos
profile-restore = copy
audio-spdif=eac3,truehd

[audio_DolbyAtmos_NoSpdif]
profile-desc = Dolby Atmos
profile-restore = copy
#audio-spdif=eac3,truehd

[audio_DTS:X]
profile-desc = DTS:X
profile-restore = copy
audio-spdif=dts-hd
#For both AC-3 and DTS passthrough, use ad=spdif:ac3,spdif:dts,
#ad=spdif:ac3,spdif:dts,
ad-lavc-downmix=no
#On the fly decode 6 channel AAC to AC3 aka DolbyDigital, lavcac3enc[=tospdif[:bitrate[:minchn]]]
af=scaletempo,lavcac3enc=yes:640:3 

[audio_Boost]
profile-desc = Audio Boost
profile-restore = copy
volume=200
af=lavfi=[acompressor=6]

[audio-filter]
profile-desc=When the audio channel is greater than 2, the dynamic range adjustment filter is used for dual channel equipment
profile-cond=p["audio-params/channel-count"] > 2
profile-restore=copy-equal
af-pre=@dynaudnorm:lavfi=[dynaudnorm=g=5:f=250:r=0.9:p=0.5]

# ==========    CUSTOM-MISC    ==========

[8bitDeband]
profile-cond=p["video-params/pixelformat"] == "yuv420p" and get("video-params/average-bpp") < 24 and ((p.file_size/1024)*8)/p.duration<=3000
profile-restore=copy
deband=yes

## https://github.com/mpv-player/mpv/issues/11122
[vsync_auto]
 profile-desc = 基于帧率或垂直同步率或速率的自动视频同步
 profile-cond = p.container_fps>32 or (p.display_fps/p.container_fps)>3.2 or p.speed>1
 profile-restore = copy
 interpolation = no
 video-sync = audio

[twitch-live-chat]
profile-cond=get("path", ""):find("^https://w?w?w?%.?twitch%.tv/") ~= nil
profile-restore=copy-equal
sub-font-size=10
sub-align-x=left
sub-margin-x=10
sub-align-y=top
sub-margin-y=10

[extension.webm]
profile-restore=copy-equal
profile-desc=webm
no-pause
loop-file=yes

[extension.gif]
profile-restore=copy-equal
profile-desc=gif
save-position-on-quit=no
loop-file=inf
no-cache

[extension.gifv]
profile-restore=copy-equal 
profile-desc=gifv
save-position-on-quit=no
loop-file=yes
no-cache

[extension.jpg]
profile-restore=copy-equal 
profile-desc=jpg
pause

[extension.jpeg]
profile=extension.jpg

[extension.png]
profile-restore=copy-equal 
profile-desc=png
pause
video-aspect-override=no

[extension.mp3]
profile-restore=copy-equal 
profile-desc=mp3
no-audio-display

[pip]				# Picture-In-Picture
profile-restore=copy-equal
ontop
on-all-workspaces
no-force-window-position
geometry=100%:100%
autofit=30%x30%
autofit-smaller=
autofit-larger=

[exit-pip]
profile-restore=copy-equal
ontop=no
geometry=50%:50%
autofit=85%x85%
autofit-smaller=50%x50%

[WebdlDeband]
profile-cond=string.match(p.filename, "%[Web%-DL%]")~=nil
deband=yes
profile-restore=copy-equal

[Webtorrent-Entries] # Hides unwanted webtorrent entries in memo script
profile-cond=string.match(string.lower(string.gsub(require "mp.utils".join_path(get("working-directory", ""), get("path", "")), string.gsub(get("filename", ""), "([^%w])", "%%%1").."$", "")), "webtorrent")
profile-restore=copy-equal
script-opts-append=memo-enabled=no

[dont-save-pos-for-short-videos]
profile-cond=duration < 300
save-position-on-quit = no
profile-restore = copy

[dont-save-watchlater-for-short-videos]
profile-cond=duration < 300
resume-playback=no
save-position-on-quit=no
profile-restore = copy

[video finished]
profile-cond=eof_reached or idle_active
save-position-on-quit=no
no-fullscreen
no-window-maximized

[higher-priority-when-playing]
profile-desc=If playing raise Windows process priority
profile-cond=not pause and not (p["eof-reached"] or p["playback-abort"])
profile-restore = copy
priority = high

[maximized]
profile-desc=Cancel automatic window size adjustment when maximizing
profile-cond=window_maximized and vid and not get("current-tracks/video/albumart")
profile-restore=copy-equal
auto-window-resize=no

[minimized]
profile-desc=Pause when minimizing
profile-cond=window_minimized and vid and not get("current-tracks/video/albumart")
profile-restore=copy-equal
pause

[media-title]
profile-desc=Switch window title display content under special protocol
profile-cond=path:find('://') ~= nil or path:find('^magnet:') ~= nil
profile-restore=copy
title=${?pause==yes:⏸}${?mute==yes:🔇}${?ontop==yes:📌}${media-title}

[interpolation-activate]
profile-desc=Active interpolation if video fps not match
profile-cond=p["estimated-vf-fps"]<31
interpolation=yes
profile-restore=copy
video-sync-max-video-change = 5
video-sync=display-vdrop

[8k-fix]
profile-desc=Use the d3d11va hard solution under 8k av1 to solve the frame drop problem. This solution is only available under --gpu-api=d3d11
#profile-cond=get("video-params/w") > 7000 or get("video-params/h") > 3000
profile-restore=copy
hwdec=auto-safe
video-sync=audio


# ==========   Protocol Specific Configuration   ==========

[protocol.http]
profile-restore=copy-equal # Sets the profile restore method to "copy if equal"
profile-desc=http
hls-bitrate=max 											# use max quality for HLS streams
user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:132.0) Gecko/20100101 Firefox/132.0'

[protocol.https]
profile-restore=copy-equal # Sets the profile restore method to "copy if equal"
profile-desc=https
profile=protocol.http

[protocol.ytdl]
profile-restore=copy-equal # Sets the profile restore method to "copy if equal"
profile-desc=ytdl
profile=protocol.http
